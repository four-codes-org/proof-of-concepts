{
  "properties": {
    "activities": [
      {
        "type": "ForEach",
        "typeProperties": {
          "isSequential": true,
          "items": {
            "value": "@pipeline().parameters.OutputBlobNameList",
            "type": "Expression"
          },
          "activities": [
            {
              "type": "Copy",
              "typeProperties": {
                "source": {
                  "type": "BlobSource"
                },
                "sink": {
                  "type": "BlobSink"
                },
                "dataIntegrationUnits": 32
              },
              "inputs": [
                {
                  "referenceName": "exampleDataset",
                  "parameters": {
                    "MyFolderPath": "examplecontainer",
                    "MyFileName": "examplecontainer.csv"
                  },
                  "type": "DatasetReference"
                }
              ],
              "outputs": [
                {
                  "referenceName": "exampleDataset",
                  "parameters": {
                    "MyFolderPath": "examplecontainer",
                    "MyFileName": {
                      "value": "@item()",
                      "type": "Expression"
                    }
                  },
                  "type": "DatasetReference"
                }
              ],
              "name": "ExampleCopyActivity"
            }
          ]
        },
        "name": "ExampleForeachActivity"
      }
    ],
    "parameters": {
      "OutputBlobNameList": {
        "type": "Array"
      },
      "JobId": {
        "type": "String"
      }
    },
    "variables": {
      "TestVariableArray": {
        "type": "Array"
      }
    },
    "runDimensions": {
      "JobId": {
        "value": "@pipeline().parameters.JobId",
        "type": "Expression"
      }
    },
    "policy": {
      "elapsedTimeMetric": {
        "duration": "0.00:10:00"
      }
    }
  }
}
