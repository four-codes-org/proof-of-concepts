---
parameters:
  - name: PERFORM_START
    displayName: PERFORM_START
    type: boolean
    default: True
  - name: PERFORM_STOP
    displayName: PERFORM_STOP
    type: boolean
    default: false
  - name: PERFORM_RESTART
    displayName: PERFORM_RESTART
    type: boolean
    default: false
  - name: PERFORM_DEV_ENVIRONMENT
    displayName: DEV
    type: boolean
    default: true
  - name: PERFORM_QA_ENVIRONMENT
    displayName: QA
    type: boolean
    default: false
  - name: PERFORM_UAT_ENVIRONMENT
    displayName: UAT
    type: boolean
    default: false
  - name: CHOOSE_APP_NAME
    displayName: CHOOSE_APP_NAME
    type: string
    default: "domain-notes-service"
    values:
      - xxx
      - yyy
      - zzz

trigger: none

variables:
  - group: COMMON_VARIABLE_FOR_ALL_APPS 
  - group: BUILD_VARIABLE_GROUP 
  - group: RELEASE_VARIABLE_GROUP

pool:
  vmImage: "ubuntu-22.04"

stages:
  - ${{ if eq(parameters.PERFORM_DEV_ENVIRONMENT, true) }}:
      - stage: "ActionPerformOnDEV"
        jobs:
          - job: "ActionPerformOnDEV"
            steps:
              - task: AzureCLI@2
                displayName: "Command Execution"
                inputs:
                  azureSubscription: $(AZURE_SUBSCRIPTION)
                  scriptType: bash
                  scriptLocation: inlineScript
                  inlineScript: |
                    az aks get-credentials --name $(DEV_AZURE_AKS_CLUSTER_NAME) --resource-group $(DEV_AZURE_RESOURCE_GROUP) --admin
                    if [[ ${{ parameters.PERFORM_START }} == True ]]; then
                        echo "##[debug]${{ parameters.CHOOSE_APP_NAME }} pod going to start now in dev namespace"
                        echo "##vso[task.setvariable variable=ACTION_STATE]1"
                        kubectl scale deployments ${{ parameters.CHOOSE_APP_NAME }} --replicas=1 -n dev
                    elif [[ ${{ parameters.PERFORM_STOP }} == True ]]; then
                        echo "##[debug]${{ parameters.CHOOSE_APP_NAME }} pod going to stop now in dev namespace"
                        echo "##vso[task.setvariable variable=ACTION_STATE]0"
                        kubectl scale deployments ${{ parameters.CHOOSE_APP_NAME }} --replicas=0 -n dev
                    else
                        echo "##[debug]${{ parameters.CHOOSE_APP_NAME }} pod going to restart now in dev namespace"
                        echo "##vso[task.setvariable variable=ACTION_STATE]restart"
                        kubectl rollout restart deployments ${{ parameters.CHOOSE_APP_NAME }}  -n dev
                    fi
                env:
                  PERFORM_START: ${{ parameters.PERFORM_START }}
                  PERFORM_STOP: ${{ parameters.PERFORM_STOP }}
                  PERFORM_RESTART: ${{ parameters.PERFORM_RESTART }}

  - ${{ if eq(parameters.PERFORM_QA_ENVIRONMENT, true) }}:
      - stage: "ActionPerformOnQA"
        jobs:
          - job: "ActionPerformOnQA"
            steps:
              - task: AzureCLI@2
                displayName: "Command Execution"
                inputs:
                  azureSubscription: $(AZURE_SUBSCRIPTION)
                  scriptType: bash
                  scriptLocation: inlineScript
                  inlineScript: |
                    az aks get-credentials --name $(QA_AZURE_AKS_CLUSTER_NAME) --resource-group $(QA_AZURE_RESOURCE_GROUP) --admin
                    if [[ ${{ parameters.PERFORM_START }} == True ]]; then
                        echo "##[debug]${{ parameters.CHOOSE_APP_NAME }} pod going to start now in qa namespace"
                        echo "##vso[task.setvariable variable=ACTION_STATE]1"
                        kubectl scale deployments ${{ parameters.CHOOSE_APP_NAME }} --replicas=1 -n qa
                    elif [[ ${{ parameters.PERFORM_STOP }} == True ]]; then
                        echo "##[debug]${{ parameters.CHOOSE_APP_NAME }} pod going to stop now in qa namespace"
                        echo "##vso[task.setvariable variable=ACTION_STATE]0"
                        kubectl scale deployments ${{ parameters.CHOOSE_APP_NAME }} --replicas=0 -n qa
                    else
                        echo "##[debug]${{ parameters.CHOOSE_APP_NAME }} pod going to restart now in qa namespace"
                        echo "##vso[task.setvariable variable=ACTION_STATE]restart"
                        kubectl rollout restart deployments ${{ parameters.CHOOSE_APP_NAME }}  -n qa
                    fi
  - ${{ if eq(parameters.PERFORM_UAT_ENVIRONMENT, true) }}:
      - stage: "ActionPerformOnUAT"
        jobs:
          - job: "ActionPerformOnUAT"
            steps:
              - task: AzureCLI@2
                displayName: "Command Execution"
                inputs:
                  azureSubscription: $(AZURE_SUBSCRIPTION)
                  scriptType: bash
                  scriptLocation: inlineScript
                  inlineScript: |
                    az aks get-credentials --name $(UAT_AZURE_AKS_CLUSTER_NAME) --resource-group $(UAT_AZURE_RESOURCE_GROUP) --admin
                    if [[ ${{ parameters.PERFORM_START }} == True ]]; then
                        echo "##[debug]${{ parameters.CHOOSE_APP_NAME }} pod going to start now in uat namespace"
                        echo "##vso[task.setvariable variable=ACTION_STATE]1"
                        kubectl scale deployments ${{ parameters.CHOOSE_APP_NAME }} --replicas=1 -n uat
                    elif [[ ${{ parameters.PERFORM_STOP }} == True ]]; then
                        echo "##[debug]${{ parameters.CHOOSE_APP_NAME }} pod going to stop now in uat namespace"
                        echo "##vso[task.setvariable variable=ACTION_STATE]0"
                        kubectl scale deployments ${{ parameters.CHOOSE_APP_NAME }} --replicas=0 -n uat
                    else
                        echo "##[debug]${{ parameters.CHOOSE_APP_NAME }} pod going to restart now in uat namespace"
                        echo "##vso[task.setvariable variable=ACTION_STATE]restart"
                        kubectl rollout restart deployments ${{ parameters.CHOOSE_APP_NAME }}  -n uat
                    fi
