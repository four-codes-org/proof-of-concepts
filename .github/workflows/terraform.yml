name: terraform
on:
  push:
    branches:
      - main
    # paths:
    #   - "terraform/event-driven/*"

env:
  terraformCreate: False
  terraformDelete: True
  terraformShow: True

jobs:
  create:
    strategy:
      matrix:
        folder: [terraform/event-driven]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ matrix.folder }}
    steps:
      - name: checkout
        if: ${{ env.terraformCreate == 'True' }}
        uses: actions/checkout@v1
      - name: setup terraform
        if: ${{ env.terraformCreate == 'True' }}
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.8
      - name: configure aws credentials
        if: ${{ env.terraformCreate == 'True' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_KEY }}
          aws-region: ap-southeast-1
      - name: init
        if: ${{ env.terraformCreate == 'True' }}
        run: |
          terraform init \
            -backend-config="bucket=op-terraform-state-file-1234" \
            -backend-config="key=dev-env.tfstate" \
            -backend-config="region=ap-southeast-1" \
            -backend=true
      - name: fmt
        if: ${{ env.terraformCreate == 'True' }}
        run: terraform fmt
      - name: validate
        if: ${{ env.terraformCreate == 'True' }}
        run: terraform validate       
      - name: plan
        run: terraform  plan  -var-file="dev-config.tfvars"
        if: ${{ env.terraformCreate == 'True' }}
      - name: apply
        if: ${{ env.terraformCreate == 'True' }}
        run: terraform  apply -var-file="dev-config.tfvars" -auto-approve

  delete: 
    strategy:
      matrix:
        folder: [terraform/event-driven]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ matrix.folder }}
    steps:
      - name: checkout
        if: ${{ env.terraformDelete == 'True' }}
        uses: actions/checkout@v1
      - name: setup terraform
        if: ${{ env.terraformDelete == 'True' }}
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.8
      - name: configure aws credentials
        if: ${{ env.terraformDelete == 'True' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_KEY }}
          aws-region: ap-southeast-1
      - name: init
        if: ${{ env.terraformDelete == 'True' }}
        run: |
          terraform init \
            -backend-config="bucket=op-terraform-state-file-1234" \
            -backend-config="key=dev-env.tfstate" \
            -backend-config="region=ap-southeast-1" \
            -backend=true
      - name: destroy
        if: ${{ env.terraformDelete == 'True' }}
        run: terraform  destroy -var-file="dev-config.tfvars" -auto-approve

  show:
    needs: create
    strategy:
      matrix:
        folder: [terraform/event-driven]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ matrix.folder }}
    steps:
      - name: checkout
        if: ${{ env.terraformShow == 'True' }}
        uses: actions/checkout@v1
      - name: setup terraform
        if: ${{ env.terraformShow == 'True' }}
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.8
      - name: configure aws credentials
        if: ${{ env.terraformShow == 'True' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_KEY }}
          aws-region: ap-southeast-1
      - name: init
        if: ${{ env.terraformShow == 'True' }}
        run: |
          terraform init \
            -backend-config="bucket=op-terraform-state-file-1234" \
            -backend-config="key=dev-env.tfstate" \
            -backend-config="region=ap-southeast-1" \
            -backend=true
      - name: show
        if: ${{ env.terraformShow == 'True' }}
        run: terraform show