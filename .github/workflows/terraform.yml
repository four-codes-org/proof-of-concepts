name: terraform
on:
  push:
    branches:
      - main
    paths:
      - "terraform/event-driven/*"
env:
  DAY_OF_WEEK: Monday

jobs:
  greeting_job:
    runs-on: ubuntu-latest
    env:
      Greeting: Hello
    steps:
      - name: "Say Hello Mona it's Monday"
        if: ${{ env.DAY_OF_WEEK == 'Monday' }}
        run: echo "$Greeting $First_Name. Today is $DAY_OF_WEEK!"
        env:
          First_Name: Mona

# env:
#   terraformCreate: False
#   terraformDelete: True
#   terraformShow: True

# jobs:
#   create:
#     if: $terraformCreate
#     strategy:
#       matrix:
#         folder: [terraform/event-driven]
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         shell: bash
#         working-directory: ${{ matrix.folder }}
#     steps:
#       - name: checkout
#         uses: actions/checkout@v1
#       - name: setup terraform
#         uses: hashicorp/setup-terraform@v1
#         with:
#           terraform_version: 1.1.8
#       - name: configure aws credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.ACCESS_KEY }}
#           aws-secret-access-key: ${{ secrets.SECRET_KEY }}
#           aws-region: ap-southeast-1
#       - name: init
#         run: |
#           terraform init \
#             -backend-config="bucket=op-terraform-state-file-1234" \
#             -backend-config="key=dev-env.tfstate" \
#             -backend-config="region=ap-southeast-1" \
#             -backend=true
#       - name: fmt
#         run: terraform fmt
#       - name: validate
#         run: terraform validate       
#       - name: plan
#         run: terraform  plan  -var-file="dev-config.tfvars"
#       - name: apply
#         run: terraform  apply -var-file="dev-config.tfvars" -auto-approve

#   delete: 
#     if: ${{env.terraformDelete}}
#     strategy:
#       matrix:
#         folder: [terraform/event-driven]
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         shell: bash
#         working-directory: ${{ matrix.folder }}
#     steps:
#       - name: checkout
#         uses: actions/checkout@v1
#       - name: setup terraform
#         uses: hashicorp/setup-terraform@v1
#         with:
#           terraform_version: 1.1.8
#       - name: configure aws credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.ACCESS_KEY }}
#           aws-secret-access-key: ${{ secrets.SECRET_KEY }}
#           aws-region: ap-southeast-1
#       - name: init
#         run: |
#           terraform init \
#             -backend-config="bucket=op-terraform-state-file-1234" \
#             -backend-config="key=dev-env.tfstate" \
#             -backend-config="region=ap-southeast-1" \
#             -backend=true
#       - name: destroy
#         run: terraform  destroy -var-file="dev-config.tfvars" -auto-approve

#   show: 
#     if: ${{env.terraformShow}}
#     strategy:
#       matrix:
#         folder: [terraform/event-driven]
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         shell: bash
#         working-directory: ${{ matrix.folder }}
#     steps:
#       - name: checkout
#         uses: actions/checkout@v1
#       - name: setup terraform
#         uses: hashicorp/setup-terraform@v1
#         with:
#           terraform_version: 1.1.8
#       - name: configure aws credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.ACCESS_KEY }}
#           aws-secret-access-key: ${{ secrets.SECRET_KEY }}
#           aws-region: ap-southeast-1
#       - name: init
#         run: |
#           terraform init \
#             -backend-config="bucket=op-terraform-state-file-1234" \
#             -backend-config="key=dev-env.tfstate" \
#             -backend-config="region=ap-southeast-1" \
#             -backend=true
#       - name: show
#         run: terraform show